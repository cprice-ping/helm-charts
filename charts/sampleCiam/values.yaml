# helm upgrade --install {{release-name}} -f ./values.yaml

# Default values for Sample CIAM chart.
global:
  # Your specific environment variables - values are injected into Server Profiles
  envs:
    # Ping Global Values
    ENVIRONMENT_NAME: "Sample-CIAM"
    # Default Administrative Password - also passed to APIs as {{globalPwd}}
    PING_IDENTITY_PASSWORD: "2FederateM0re"
    ## BaseDN of the datastore
    #USER_BASE_DN: "dc=example.com"

  # If you'd like to separate the stack from other deployments in your namespace
  # prepend | append | none  
  addReleaseNameToResource: prepend

  api:
    # Set to "DEBUG" if you want to see the output of the API calls being made by pingconfig
    # kubectl logs -f job/{{release name}}-pingconfig
    logLevel: "INFO"

  # Determines if the DevOps Ingress config is applied
  # Set to `false` to use a single Client-facing ingress to pul all front-channel services on one hostname
  ingress:
    enabled: true
    addReleaseNameToHost: append
    defaultDomain: ping-devops.com
#### End Global ####

# PingOne Service Details
pingOne:
  # Set to `true` if you are supplying your PingOne details 
  # C360 leverages PingOne MFA by default
  usePingOneServices: true
  # This configures the proper endpoints for My Ping and PingOne Service IKs
  # PingOne Regions - "NA" | "EU" | "AP"
  envRegion: "NA"
  # If using My Ping - enter the details for the Admin SSO Connection here
  # https://github.com/cprice-ping/Customer360/blob/main/docs/sso-myping.md
  administration:
    # Set to `true` to enable My Ping - if `false`, Admin consoles will use LDAP (PF \ PD) or Native (PC \ PA)
    useMyPing: false
    # Configure these values if `useMyPing` == true
    envId: "YourAdminEnvId"
    adminUserId: "YourAdminUserID" # Not Username - the UUID on the API tab
    logonApp:
      id: "YourAdminApp"
      secret: "YourAdminSecret"
    # Admin Environment's Worker App (Configured in Connections --> Worker) - with AdminUser permissions
    workerApp:
      id: "YourPFWorkerAppID"
      secret: "YourPFWorkerAppSecret"
  # This section is for the PingOne Service(s) details
  services:
    enabled: true
    # If licensed, API calls will be made to create the proper PingOne components and configure the IKs in PingFed
    licensed:
      mfa: 
        enabled: true # MFA_TRIAL will be used initially
      risk: 
        enabled: false
### End - PingOne

# Enable these to include with the base CIAM configuration
useCases:
  # Add PingAccess proxy deployment for all Client traffic, instead of Ingress 
  paAsProxy:
    # If enabled, create your `externalHostname` DNS record as a CNAME to `pa.ping-demos.com`
    # This will send traffic through the `nginx-public-passthrough` Ingress IP
    enabled: false
    ## Set TRUSTED_CERT to `true` if you want a Let's Encrypt Cert
    ## (Leave to `false` while testing - so you don't trip LE rate limits)
    ## Configure `externalDNS` above if you want a Vanity domain with ACME managed cert
    useTrustedCert: false
  # Add PingAccess deployment for protected WAM Client traffic
  # Configures PF as the Token Provider
  paAsWAM:
    enabled: false
  # Configure PD Consent API and prep PF \ PA for Privacy Dashboard
  consentManagement: 
    enabled: true
  # Configure PD for DelAdmin (Config and Users) and install Delegator
  # Server Profile: https://github.com/cprice-ping/Profile-DelAdmin
  delegatedAdministration: 
    enabled: true
#### End - Use Cases

## Product Specific values
# DevOps Keys and \ or License files can be applied to the container
# License files should be injected into your kubernetes namespace as secrets:
  # (Eval)   ping-devops generate license {product} | kubectl apply -f -
  # (Real)   ping-devops generate license-secret {license file} | kubectl apply -f -
ping-devops:
  pingdirectory:
    enabled: true
    envs: 
      SERVER_PROFILE_URL: https://github.com/cprice-ping/Sample-CIAM.git
      SERVER_PROFILE_PATH: pingdirectory
    logging: INFO
    #ingress:
    #  enabled: false
    container:
      replicaCount: 1
    services:
      https:
        clusterService: true
      apis:
        clusterService: true
  
  pingdataconsole:
    enabled: true

  pingfederate-admin:
    enabled: true
    envs:
      SERVER_PROFILE_URL: https://github.com/cprice-ping/Sample-CIAM.git
      SERVER_PROFILE_PATH: pingfederate   
    logging: INFO
    ingress:
      hosts:
        - host: pingfederate-admin._defaultDomain_
          paths:
          - path: /
            backend:
              servicePort: 443 
    services:
      # Allows OIDC callbacks to PF through the GSA Ingress
      # Comment out `admin` section to default to :9999
      admin:
        port: 443
        targetPort: 443

  pingfederate-engine:
    enabled: true
    envs:
      SERVER_PROFILE_URL: https://github.com/cprice-ping/Sample-CIAM.git
      SERVER_PROFILE_PATH: pingfederate
      PF_ADMIN_PORT: "443"
    logging: INFO
    #ingress:
    #  enabled: false

  pingdatasync:
    enabled: true
    logging: INFO

  pingcentral:
    enabled: false
    tlsBlindTrust: true
    tlsVerifyHostnames: false
    envs:
      SERVER_PROFILE_URL: https://github.com/cprice-ping/Sample-CIAM.git 
      SERVER_PROFILE_PATH: pingcentral/logging
      SERVER_PROFILE_PARENT: DATA
      SERVER_PROFILE_DATA_URL: https://github.com/cprice-ping/Sample-CIAM.git
      SERVER_PROFILE_DATA_PATH: pingcentral/external-mysql-db
    logging: INFO

  pingaccess:
    enabled: false
    logging: INFO

  pingdelegator:
    enabled: true

collections:
  solutions:
    sampleCiam:
      name: "Sample CIAM" 
      url: https://www.getpostman.com/collections/f1f5ffff5ddd891e720d
  useCases:
    paAsProxy:
      name: "PA as Proxy"
      url: https://www.getpostman.com/collections/eaa397bd3a35ef3095c1
    consentManagement:
      name: "Consent Management"
      url: https://www.getpostman.com/collections/4f27daff62383fd3f4ed
    consentEnforcement:
      name: "Consent Enforcement" 
      url: https://www.getpostman.com/collections/a1378e567df17ff15f10
    delegatedAdministration: 
      name: "Delegated Administration"
      url: https://www.getpostman.com/collections/67c0839677fa2b0fad81
    paAsWAM:
      name: "PA as WAM (PF)"
      url: https://www.getpostman.com/collections/6573a75f6042999e5c9f
    pingOneServices:
      mfa:
        name: "PingOne MFA Integration"
        url: https://www.getpostman.com/collections/11e33dc2001c7555eb06
      risk:
        name: "PingOne Risk Integration"
        url: https://pingonerisk.com
      pf:
        name: "PingOne Federation to PF"
        url: https://pingonefederation.com
