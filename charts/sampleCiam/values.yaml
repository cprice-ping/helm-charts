# helm upgrade --install {{release-name}} -f ./values.yaml

# Default values for Sample CIAM chart.
global:
  # Your specific environment variables - values are injected into Server Profiles
  envs:
    # Ping Global Values
    # Named used in labels in PingOne and Ping Software
    ENVIRONMENT_NAME: "Sample-CIAM"
    # Default Administrative Password - also passed to APIs as {{globalPwd}}
    PING_IDENTITY_PASSWORD: "2FederateM0re"
    ## BaseDN of the datastore
    #USER_BASE_DN: "dc=example.com"

  # If you'd like to separate the stack from other deployments in your namespace
  # prepend | append | none  
  addReleaseNameToResource: prepend

  api:
    # Set to "DEBUG" if you want to see the output of the API calls being made by pingconfig
    # kubectl logs -f job/{{release name}}-pingconfig
    logLevel: "INFO"

  # Determines if the DevOps Ingress config is applied
  # Set to `false` to use a single Client-facing ingress to pul all front-channel services on one hostname
  ingress:
    enabled: true
    addReleaseNameToHost: append
    defaultDomain: ping-devops.com
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      kubernetes.io/ingress.class: "nginx-public"

#### End Global ####

# PingOne Service Details
pingOne:
  # Set to `true` if you are supplying your PingOne details 
  # C360 leverages PingOne MFA by default
  usePingOneServices: true
  # This configures the proper endpoints for My Ping and PingOne Service IKs
  # PingOne Regions - "NA" | "EU" | "AP"
  envRegion: "NA"
  administration:
    useMyPing: true
    envId: "YourAdminEnvId"
    adminUserId: "YourAdminUserId"
    workerApp:
      id: "YourMgmtWorkerId"
      secret: "YourMgmtWorkerSecret"
    pfLogonApp:
      id: "YourPFAdminAppId"
      secret: "YourPFAdminAppSecret"
    psLogonApp:
      id: "YourPAAdminAppId"
      secret: "YourPAAdminAppSecret"
    pdLogonApp:
      id: "YourPDAdminAppId"
      secret: "YourPDAdminAppSecret"
  services:
    enabled: true
### End - PingOne

capabilities:
  authenticationAuthority:
    enabled: true
  directory:
    enabled: true
  multiFactorAuthentication:
    enabled: false
  accessManagement:
    enabled: false
  dynamicAuthorization:
    enabled: false
  risk:
    enabled: false

baseline:
  directory:
    enabled: true

# Enable these to include with the base CIAM configuration
useCases:
  # Add PingAccess proxy deployment for all Client traffic, instead of Ingress 
  paAsProxy:
    # If enabled, create your `externalHostname` DNS record as a CNAME to `pa.ping-demos.com`
    # This will send traffic through the `nginx-public-passthrough` Ingress IP
    enabled: false
    ## Set TRUSTED_CERT to `true` if you want a Let's Encrypt Cert
    ## (Leave to `false` while testing - so you don't trip LE rate limits)
    ## Configure `externalDNS` above if you want a Vanity domain with ACME managed cert
    useTrustedCert: false
  # Add PingAccess deployment for protected WAM Client traffic
  # Configures PF as the Token Provider
  paAsAM:
    enabled: false
  # Configure PD Consent API and prep PF \ PA for Privacy Dashboard
  consentManagement: 
    enabled: false
  # Configure PD for DelAdmin (Config and Users) and install Delegator
  # Server Profile: https://github.com/cprice-ping/Profile-DelAdmin
  delegatedAdministration: 
    enabled: false
  socialConnections:
    enabled: false
#### End - Use Cases

usePingConfig:
  enabled: true

## Product Specific values
# DevOps Keys and \ or License files can be applied to the container
# License files should be injected into your kubernetes namespace as secrets:
  # (Eval)   ping-devops generate license {product} | kubectl apply -f -
  # (Real)   ping-devops generate license-secret {license file} | kubectl apply -f -
ping-devops:
  pingdirectory:
    enabled: true
    envs: 
      SERVER_PROFILE_URL: https://github.com/cprice-ping/Sample-CIAM.git
      SERVER_PROFILE_PATH: pingdirectory
      SERVER_PROFILE_BRANCH: main
    image:
      tag: edge
    logging: INFO
    container:
      replicaCount: 1
    services:
      apis:
        dataService: true
        servicePort: 2443
        containerPort: 2443
  
  pingdataconsole:
    enabled: true
    image:
      tag: edge

  pingfederate-admin:
    enabled: true
    envs:
      SERVER_PROFILE_URL: https://github.com/cprice-ping/Sample-CIAM.git
      SERVER_PROFILE_PATH: pingfederate
      SERVER_PROFILE_BRANCH: main
    image:
      tag: edge
    logging: INFO
    #ingress:
    #  hosts:
    #    - host: pingfederate-admin._defaultDomain_
    #      paths:
    #      - path: /
    #        backend:
    #          serviceName: https 
    services:
      # Allows OIDC callbacks to PF through the GSA Ingress
      # Comment out `admin` section to default to :9999
      https:
        servicePort: 443
        containerPort: 443

  pingfederate-engine:
    enabled: true
    envs:
      SERVER_PROFILE_URL: https://github.com/cprice-ping/Sample-CIAM.git
      SERVER_PROFILE_PATH: pingfederate
      SERVER_PROFILE_BRANCH: main
      PF_ADMIN_PORT: "443"
    image:
      tag: edge
    logging: INFO

  pingdatasync:
    enabled: true
    image:
      tag: edge
    logging: INFO

  pingcentral:
    enabled: false
    tlsBlindTrust: true
    tlsVerifyHostnames: false
    envs:
      SERVER_PROFILE_URL: https://github.com/cprice-ping/Sample-CIAM.git 
      SERVER_PROFILE_PATH: pingcentral/logging
      SERVER_PROFILE_BRANCH: main
      SERVER_PROFILE_PARENT: DATA
      SERVER_PROFILE_DATA_URL: https://github.com/cprice-ping/Sample-CIAM.git
      SERVER_PROFILE_DATA_PATH: pingcentral/external-mysql-db
      SERVER_PROFILE_DATA_BRANCH: main
    logging: INFO

  pingaccess:
    enabled: false
    image:
      tag: edge
    logging: INFO

  pingdelegator:
    enabled: false
    envs:
      PF_ENGINE_PUBLIC_PORT: null
    image:
      tag: edge

collections:
  solutions:
    sampleCiam:
      name: "Sample CIAM" 
      url: https://www.getpostman.com/collections/4dc617002fcb8c828127
  useCases:
    paAsProxy:
      name: "PA as Proxy"
      url: https://www.getpostman.com/collections/eaa397bd3a35ef3095c1
    consentManagement:
      name: "Consent Management"
      url: https://www.getpostman.com/collections/4f27daff62383fd3f4ed
    consentEnforcement:
      name: "Consent Enforcement" 
      url: https://www.getpostman.com/collections/a1378e567df17ff15f10
    delegatedAdministration: 
      name: "Delegated Administration"
      url: https://www.getpostman.com/collections/67c0839677fa2b0fad81
    paAsAM:
      name: "PA as Access Manager (PF)"
      url: https://www.getpostman.com/collections/6573a75f6042999e5c9f
    socialConnections:
      name: "Social Connections"
      url: https://www.getpostman.com/collections/3bc255e9deeec515a65b
  capabilities:
    pingOne:
      name: "My Ping Environment"
      url: https://www.getpostman.com/collections/6f6d11a1b8536d740592
    authenticationAuthority:
      name: "Authentication Authority"
      url: https://www.getpostman.com/collections/ea904b8707ab682e35cd
    directory: 
      name: "Directory"
      url: https://www.getpostman.com/collections/f398715be18b040e211d
    accessManagement:
      name: "Access Management"
      url: https://www.getpostman.com/collections/934936decf928c0cc792
    multiFactorAuthentication:
      name: "Multi Factor Service"
      url: https://www.getpostman.com/collections/169d34297acffb2e9aad
    risk:
      name: "Adaptive Authentication"
      url: https://www.getpostman.com/collections/62d37170e2e1bbbc6ed2
  baseline:
    directory:
      name: "PD Baseline - PF Config Store"
      url: https://www.getpostman.com/collections/f59e241da208cb731775
